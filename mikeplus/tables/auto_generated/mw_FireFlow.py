from mikeplus.tables.base_table import BaseTable
from mikeplus.tables.base_table import BaseColumns

class mw_FireFlowTableColumns(BaseColumns):
    """Column names for mw_FireFlow (Fire flow analysis)."""
    MUID = "MUID"
    """ID"""
    UseHydNo = "UseHydNo"
    """Use external hydrants data"""
    SimStartTime = "SimStartTime"
    """Time start"""
    Duration = "Duration"
    """Duration [h]"""
    SelNodeTypeNo = "SelNodeTypeNo"
    """Node selection type"""
    NodeSelectionList = "NodeSelectionList"
    """Selection ID"""
    TypeNo = "TypeNo"
    """Method type"""
    DesignPressure = "DesignPressure"
    """Design pressure [m]"""
    DesignFlow = "DesignFlow"
    """Design flow [m^3/s]"""
    NodeDemMult = "NodeDemMult"
    """Demand multiplier"""
    UseNodeDemMultNo = "UseNodeDemMultNo"
    """Use demand multiplier"""
    UseSimultaneousNo = "UseSimultaneousNo"
    """Simultaneous fire flow"""
    ReportCriPreNo = "ReportCriPreNo"
    """Report below critical pressure"""
    ReportCriVelNo = "ReportCriVelNo"
    """Report above critical velocity"""
    UseCriNodePreNo = "UseCriNodePreNo"
    """Maintain Minimum residual pressure"""
    UseCriFlowLimitNo = "UseCriFlowLimitNo"
    """Maintain maximum velocity"""
    UseNodeBelResPreNo = "UseNodeBelResPreNo"
    """Skip nodes with static pressure below residual pressure"""
    CriNodePre = "CriNodePre"
    """Critical pressure [m]"""
    CriFlowLimit = "CriFlowLimit"
    """Critical velocity [m/s]"""
    SimFirHydNo = "SimFirHydNo"
    """Simulate hydrant lateral"""
    FirHydMinorLoss = "FirHydMinorLoss"
    """Local loss coefficient"""
    FirHydPipeDiameter = "FirHydPipeDiameter"
    """Lateral diameter [mm]"""
    FirHydPipeLength = "FirHydPipeLength"
    """Lateral length [m]"""
    FirHydPipeRough = "FirHydPipeRough"
    """Lateral roughness"""
    UseCriNodeRadiusNo = "UseCriNodeRadiusNo"
    """Critical node/pipe search type"""
    CriNodeRadius = "CriNodeRadius"
    """Critical node/pipe search radius [m]"""
    SearchZoneTypeNo = "SearchZoneTypeNo"
    """Zone type"""
    HydLayer = "HydLayer"
    """Hydrant layer"""
    HydInputField = "HydInputField"
    """Add input field"""
    HydOutField = "HydOutField"
    """Add result field"""
    SelHydTypeNo = "SelHydTypeNo"
    """Hydrant selection type"""
    HydSnapTolerance = "HydSnapTolerance"
    """Snapping tolerance [m]"""

class mw_FireFlowTable(BaseTable):
    """Table for mw_FireFlow (Fire flow analysis)."""
    
    @property
    def columns(self) -> mw_FireFlowTableColumns:
        """Get the columns for the table."""
        if self._columns is None:
            self._columns = mw_FireFlowTableColumns(self)
        return self._columns