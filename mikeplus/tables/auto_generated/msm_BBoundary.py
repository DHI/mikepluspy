from mikeplus.tables.base_table import BaseTable
from mikeplus.tables.base_table import BaseColumns

class msm_BBoundaryTableColumns(BaseColumns):
    """Column names for msm_BBoundary (Boundary conditions)."""
    MUID = "MUID"
    """ID"""
    TypeNo = "TypeNo"
    """Type"""
    GroupNo = "GroupNo"
    """Group No"""
    GridTypeNo = "GridTypeNo"
    """GridTypeNo"""
    ApplyBoundaryNo = "ApplyBoundaryNo"
    """Apply"""
    LoadTypeNo = "LoadTypeNo"
    """Load type"""
    FlowTypeNo = "FlowTypeNo"
    """Flow type"""
    ConnectionTypeNo = "ConnectionTypeNo"
    """Connection type"""
    ListName = "ListName"
    """List Name"""
    LoadCategoryNo = "LoadCategoryNo"
    """Load category"""
    SourceLocationNo = "SourceLocationNo"
    """SourceLocationNo"""
    SourceXCoor = "SourceXCoor"
    """X [m]"""
    SourceYCoor = "SourceYCoor"
    """Y [m]"""
    CatchID = "CatchID"
    """Catchment ID"""
    NodeID = "NodeID"
    """Node ID"""
    LinkID = "LinkID"
    """Link ID"""
    RiverMuid = "RiverMuid"
    """RiverMuid"""
    Chainage = "Chainage"
    """Chainage [m]"""
    StorageID = "StorageID"
    """Storage ID"""
    RiverLocationNo = "RiverLocationNo"
    """Location"""
    RiverSrcTypeNo = "RiverSrcTypeNo"
    """Source type"""
    RiverSrcUSChainage = "RiverSrcUSChainage"
    """Upstr. chainage [m]"""
    RiverSrcDSChainage = "RiverSrcDSChainage"
    """Downstr. chainage [m]"""
    Distance = "Distance"
    """Distance"""
    DistributeNo = "DistributeNo"
    """DistributeNo"""
    CatchLoadNo = "CatchLoadNo"
    """CatchLoadNo"""
    VariationNo = "VariationNo"
    """Variation No"""
    ConstantValue = "ConstantValue"
    """Constant value"""
    StartupNo = "StartupNo"
    """Gradual start up"""
    StartupTime = "StartupTime"
    """Time [sec]"""
    StartupValue = "StartupValue"
    """From"""
    CyclicValue = "CyclicValue"
    """Cyclic Value"""
    DPProfileID = "DPProfileID"
    """Profile ID"""
    TSConnection = "TSConnection"
    """File name"""
    TimeseriesName = "TimeseriesName"
    """Time series ID"""
    DataTypeName = "DataTypeName"
    """Data type"""
    TSConnTypeNo = "TSConnTypeNo"
    """Connection type"""
    VariationDicrctionNo = "VariationDicrctionNo"
    """Variation No"""
    ConstantDicrctionValue = "ConstantDicrctionValue"
    """Constant value [deg]"""
    TSConnectionDicrction = "TSConnectionDicrction"
    """File name"""
    TimeseriesNameDicrction = "TimeseriesNameDicrction"
    """Time series ID"""
    DataTypeNameDicrction = "DataTypeNameDicrction"
    """Data type"""
    ValidityIntervalNo = "ValidityIntervalNo"
    """Use limited validity interval"""
    ValidityBegin = "ValidityBegin"
    """Validity Start"""
    ValidityEnd = "ValidityEnd"
    """Validity End"""
    Fraction = "Fraction"
    """Scale factor [()]"""
    RiverQHRelation = "RiverQHRelation"
    """Q/h relation"""
    Description = "Description"
    """Description"""

class msm_BBoundaryTable(BaseTable):
    """Table for msm_BBoundary (Boundary conditions)."""
    
    @property
    def columns(self) -> msm_BBoundaryTableColumns:
        """Get the columns for the table."""
        if self._columns is None:
            self._columns = msm_BBoundaryTableColumns(self)
        return self._columns