from mikeplus.tables.base_node_table import BaseNodeTable
from mikeplus.tables.base_node_table import BaseColumns

class mss_NodeTableColumns(BaseColumns):
    """Column names for mss_Node (Nodes)."""
    MUID = "MUID"
    """ID"""
    GeomX = "GeomX"
    """X coordinate [m]"""
    GeomY = "GeomY"
    """Y coordinate [m]"""
    TypeNo = "TypeNo"
    """Node type"""
    Enabled = "Enabled"
    """Is active"""
    Einv = "Einv"
    """Invert level [m]"""
    GroundLevel = "GroundLevel"
    """Ground level [m]"""
    Dmax = "Dmax"
    """Max. depth [m]"""
    D0 = "D0"
    """Initial depth [m]"""
    Dsur = "Dsur"
    """Surch. depth [m]"""
    Apond = "Apond"
    """Ponded area [m^2]"""
    GeomTypeNo = "GeomTypeNo"
    """Geometry type"""
    GeomCoeff = "GeomCoeff"
    """Coefficient [mm]"""
    GeomConst = "GeomConst"
    """Constant [m^2]"""
    GeomExponent = "GeomExponent"
    """Exponent"""
    GeomID = "GeomID"
    """Storage geometry"""
    Fevap = "Fevap"
    """Evaporation"""
    StorageInfiltrationNo = "StorageInfiltrationNo"
    """Include infiltration"""
    StorageSuctionHead = "StorageSuctionHead"
    """Suction head [mm]"""
    StorageConductivity = "StorageConductivity"
    """Conductivity [mm/h]"""
    StorageInitialDeficit = "StorageInitialDeficit"
    """Initial deficit"""
    FlapGateTypeNo = "FlapGateTypeNo"
    """Outfall type"""
    FixedStage = "FixedStage"
    """Constant stage [m]"""
    TideGateID = "TideGateID"
    """Tidal curve"""
    TideGateTSID = "TideGateTSID"
    """Time series"""
    FlapGateNo = "FlapGateNo"
    """No return valve"""
    RouteTo = "RouteTo"
    """Route to"""
    DividerTypeNo = "DividerTypeNo"
    """Divider type"""
    CutoffFlow = "CutoffFlow"
    """Cutoff flow [m^3/s]"""
    DivertedFlowID = "DivertedFlowID"
    """Divider curve"""
    DivertedMinFlow = "DivertedMinFlow"
    """Min. flow [m^3/s]"""
    DivertedMaxDepth = "DivertedMaxDepth"
    """Max. depth [m]"""
    DivertionCoeff = "DivertionCoeff"
    """Diversion coeff"""
    LinkID = "LinkID"
    """Divided to"""
    Description = "Description"
    """Description"""
    DataSource = "DataSource"
    """Data source"""
    AssetName = "AssetName"
    """Asset ID"""
    Element_S = "Element_S"
    """Status"""
    NetTypeNo = "NetTypeNo"
    """Network type"""
    Tag = "Tag"
    """Tag"""

class mss_NodeTable(BaseNodeTable):
    """Table for mss_Node (Nodes)."""
    
    @property
    def columns(self) -> mss_NodeTableColumns:
        """Get the columns for the table."""
        if self._columns is None:
            self._columns = mss_NodeTableColumns(self)
        return self._columns