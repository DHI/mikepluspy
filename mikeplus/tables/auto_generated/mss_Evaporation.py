from mikeplus.tables.base_table import BaseTable
from mikeplus.tables.base_table import BaseColumns

class mss_EvaporationTableColumns(BaseColumns):
    """Column names for mss_Evaporation (Evaporation)."""
    MUID = "MUID"
    """ID"""
    TypeNo = "TypeNo"
    """Type"""
    ConstValue = "ConstValue"
    """Constant value [mm/d]"""
    Value1 = "Value1"
    """Evap in Jan [mm/d]"""
    Value2 = "Value2"
    """Evapin Feb [mm/d]"""
    Value3 = "Value3"
    """Evap in Mar [mm/d]"""
    Value4 = "Value4"
    """Value in Apr [mm/d]"""
    Value5 = "Value5"
    """Evap in May [mm/d]"""
    Value6 = "Value6"
    """Evap in June [mm/d]"""
    Value7 = "Value7"
    """Evap in July [mm/d]"""
    Value8 = "Value8"
    """Evap in Aug [mm/d]"""
    Value9 = "Value9"
    """Value in Sep [mm/d]"""
    Value10 = "Value10"
    """Evap in Oct [mm/d]"""
    Value11 = "Value11"
    """Evap in Nov [mm/d]"""
    Value12 = "Value12"
    """Evap in Dec [mm/d]"""
    TimeSeriesID = "TimeSeriesID"
    """Time series ID"""
    Pan1 = "Pan1"
    """Pan in Jan [mm/d]"""
    Pan2 = "Pan2"
    """Pan in Feb [mm/d]"""
    Pan3 = "Pan3"
    """Pan in Mar [mm/d]"""
    Pan4 = "Pan4"
    """Pan in Apr [mm/d]"""
    Pan5 = "Pan5"
    """Pan in May [mm/d]"""
    Pan6 = "Pan6"
    """Pan in June [mm/d]"""
    Pan7 = "Pan7"
    """Pan in July [mm/d]"""
    Pan8 = "Pan8"
    """Pan in Aug [mm/d]"""
    Pan9 = "Pan9"
    """Pan in Sep [mm/d]"""
    Pan10 = "Pan10"
    """Pan in Oct [mm/d]"""
    Pan11 = "Pan11"
    """Pan in Nov [mm/d]"""
    Pan12 = "Pan12"
    """Pan in Dec [mm/d]"""
    SoilRecoveryPatternID = "SoilRecoveryPatternID"
    """Monthly soil recovery pattern"""
    DryOnlyNo = "DryOnlyNo"
    """Evaporate only during dry periods"""

class mss_EvaporationTable(BaseTable):
    """Table for mss_Evaporation (Evaporation)."""
    
    @property
    def columns(self) -> mss_EvaporationTableColumns:
        """Get the columns for the table."""
        if self._columns is None:
            self._columns = mss_EvaporationTableColumns(self)
        return self._columns