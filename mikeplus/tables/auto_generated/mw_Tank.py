from mikeplus.tables.base_node_table import BaseNodeTable
from mikeplus.tables.base_node_table import BaseColumns

class mw_TankTableColumns(BaseColumns):
    """Column names for mw_Tank (Tanks)."""
    MUID = "MUID"
    """ID"""
    GeomX = "GeomX"
    """X [m]"""
    GeomY = "GeomY"
    """Y [m]"""
    HGLTypeNo = "HGLTypeNo"
    """Tank type"""
    Elev = "Elev"
    """Base elevation [m]"""
    ZoneID = "ZoneID"
    """Zone ID"""
    Enabled = "Enabled"
    """Is active"""
    TypeNo = "TypeNo"
    """Tank Geometry"""
    VolCurveID = "VolCurveID"
    """Tank geometry ID"""
    Width = "Width"
    """Width [m]"""
    Length = "Length"
    """Length [m]"""
    Diameter = "Diameter"
    """Diameter [m]"""
    MinLevel = "MinLevel"
    """Minimum level [m]"""
    MinLevel_HGL = "MinLevel_HGL"
    """- [m]"""
    InitLevel = "InitLevel"
    """Initial level [m]"""
    InitLevel_HGL = "InitLevel_HGL"
    """ -  [m]"""
    MaxLevel = "MaxLevel"
    """Maximum level [m]"""
    MaxLevel_HGL = "MaxLevel_HGL"
    """ -  [m]"""
    MinVol = "MinVol"
    """Inactive volume [m^3]"""
    OperationalVolume = "OperationalVolume"
    """Operational volume [m^3]"""
    OverflowNo = "OverflowNo"
    """Can overflow"""
    HGLLevelTypeNo = "HGLLevelTypeNo"
    """Reservoir level type """
    HGL = "HGL"
    """Fixed HGL [m]"""
    PatternID = "PatternID"
    """HGL pattern"""
    Z = "Z"
    """Z [m]"""
    ReactionCoefficient = "ReactionCoefficient"
    """Reaction rate [/d]"""
    MixModelNo = "MixModelNo"
    """Tank mixing"""
    ComVol = "ComVol"
    """Component value [m^3]"""
    Init_Quality_Concentration = "Init_Quality_Concentration"
    """Chemical concentration [mg/l]"""
    Init_Quality_Percentage = "Init_Quality_Percentage"
    """Source percentage [%]"""
    Init_Quality_Hour = "Init_Quality_Hour"
    """Water age [h]"""
    DataSource = "DataSource"
    """Data source"""
    AssetName = "AssetName"
    """Asset ID"""
    Element_S = "Element_S"
    """Status"""
    Description = "Description"
    """Description"""
    Note = "Note"
    """Note"""

class mw_TankTable(BaseNodeTable):
    """Table for mw_Tank (Tanks)."""
    
    @property
    def columns(self) -> mw_TankTableColumns:
        """Get the columns for the table."""
        if self._columns is None:
            self._columns = mw_TankTableColumns(self)
        return self._columns