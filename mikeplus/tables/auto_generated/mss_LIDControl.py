from mikeplus.tables.base_table import BaseTable
from mikeplus.tables.base_table import BaseColumns

class mss_LIDControlTableColumns(BaseColumns):
    """Column names for mss_LIDControl (LID properties)."""
    MUID = "MUID"
    """ID"""
    LIDType = "LIDType"
    """LID type"""
    StorHt = "StorHt"
    """Storage depth [mm]"""
    VegFrac = "VegFrac"
    """Vegetative volume [()]"""
    Rough = "Rough"
    """Surface roughness [s/m^(1/3)]"""
    Slope = "Slope"
    """Surface slope [%]"""
    Xslope = "Xslope"
    """Swale side slope [()]"""
    SThick = "SThick"
    """Thickness [mm]"""
    Por = "Por"
    """Porosity"""
    FC = "FC"
    """Field capacity"""
    WP = "WP"
    """Wilting point"""
    Ksat = "Ksat"
    """Conductivity [mm/h]"""
    Kcoeff = "Kcoeff"
    """Conductivity slope"""
    Suct = "Suct"
    """Suction head [mm]"""
    PThick = "PThick"
    """Thickness [mm]"""
    PVratio = "PVratio"
    """Void ratio"""
    FracImp = "FracImp"
    """Impervious surface [()]"""
    Perm = "Perm"
    """Permeability [mm/h]"""
    PVclog = "PVclog"
    """Clogging factor"""
    PRegInterval = "PRegInterval"
    """Regeneration interval [d]"""
    PRegFraction = "PRegFraction"
    """Regeneration fraction [()]"""
    Height = "Height"
    """Height [mm]"""
    SVratio = "SVratio"
    """Void ratio"""
    Filt = "Filt"
    """Conductivity [mm/h]"""
    SVclog = "SVclog"
    """Clogging factor"""
    Coeff = "Coeff"
    """Coefficient [mm/h]"""
    Expon = "Expon"
    """Exponent"""
    _Offset = "_Offset"
    """Offset height [mm]"""
    Delay = "Delay"
    """Delay [h]"""
    OpenLev = "OpenLev"
    """Open level [mm]"""
    ClosedLev = "ClosedLev"
    """Closed level [mm]"""
    ControlCurveID = "ControlCurveID"
    """Control curve"""
    DMThick = "DMThick"
    """Thickness [mm]"""
    DMVFraction = "DMVFraction"
    """Void fraction [()]"""
    DMRough = "DMRough"
    """Roughness (Manning n) [s/m^(1/3)]"""
    RDFlowCap = "RDFlowCap"
    """Flow capacity [mm/h]"""

class mss_LIDControlTable(BaseTable):
    """Table for mss_LIDControl (LID properties)."""
    
    @property
    def columns(self) -> mss_LIDControlTableColumns:
        """Get the columns for the table."""
        if self._columns is None:
            self._columns = mss_LIDControlTableColumns(self)
        return self._columns